package fbox;

import com.midtrans.httpclient.error.MidtransError;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import org.json.JSONException;

/**
 *
 * @author ukunc
 */
public class Guide extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    private boolean statusPasswordInput = false;
    private int userID;

    /**
     * Creates new form Guide
     *
     * @param userID
     */
    public Guide(int userID) {
        this.userID = userID;
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setBackgroundImage(); // Memanggil method untuk mengatur gambar latar belakang
        initComponents();
    }

    public void setBackgroundImage() {
        // Buat ImageIcon dari gambar GIF
        ImageIcon gifIcon = new ImageIcon(getClass().getResource("/icon/phomoriaIcon/csc.jpg"));

        // Dapatkan gambar dari ImageIcon
        Image gifImage = gifIcon.getImage();

        // Set latar belakang JFrame dengan gambar GIF
        setContentPane(new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(gifImage, 0, 0, getWidth(), getHeight(), this);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        header = new javax.swing.JPanel();
        iconClose = new javax.swing.JPanel();
        icClose = new javax.swing.JLabel();
        iconMax = new javax.swing.JPanel();
        icMax = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        bt_payment = new javax.swing.JLabel();
        bt_voucer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        header.setBackground(new java.awt.Color(0, 0, 0));
        header.setPreferredSize(new java.awt.Dimension(800, 50));

        iconClose.setBackground(new java.awt.Color(0, 0, 0));
        iconClose.setPreferredSize(new java.awt.Dimension(50, 50));
        iconClose.setLayout(new java.awt.BorderLayout());

        icClose.setBackground(new java.awt.Color(51, 102, 255));
        icClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        icClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete_32px.png"))); // NOI18N
        icClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        icClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                icCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                icCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                icCloseMouseExited(evt);
            }
        });
        iconClose.add(icClose, java.awt.BorderLayout.CENTER);

        iconMax.setBackground(new java.awt.Color(0, 0, 0));
        iconMax.setPreferredSize(new java.awt.Dimension(50, 50));
        iconMax.setLayout(new java.awt.BorderLayout());

        icMax.setBackground(new java.awt.Color(51, 102, 255));
        icMax.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        icMax.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/full_screen_32px.png"))); // NOI18N
        icMax.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                icMaxMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                icMaxMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                icMaxMouseExited(evt);
            }
        });
        iconMax.add(icMax, java.awt.BorderLayout.CENTER);

        jLabel1.setFont(new java.awt.Font("Circular Std Black", 0, 64)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/PHOMORIA21.png"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Circular Std Black", 0, 30)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Phomoria");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(iconMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iconClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        bt_payment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/phomoriaIcon/payment button.png"))); // NOI18N
        bt_payment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_paymentMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 766, 0, 1);
        jPanel1.add(bt_payment, gridBagConstraints);

        bt_voucer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/phomoriaIcon/voucher button.png"))); // NOI18N
        bt_voucer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_voucerMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 21, 0, 0);
        jPanel1.add(bt_voucer, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, 1204, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 250, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(231, 231, 231))
        );

        setSize(new java.awt.Dimension(1204, 676));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void changeColor(JPanel hover, Color rand) {
        hover.setBackground(rand);

    }
    private void icCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icCloseMouseClicked
        if (!statusPasswordInput) {
            // Jika statusPasswordInput false, tampilkan input password
            showPasswordClose();
        }
    }//GEN-LAST:event_icCloseMouseClicked

    private void icCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icCloseMouseEntered
        changeColor(iconClose, new Color(240, 240, 240));
    }//GEN-LAST:event_icCloseMouseEntered

    private void icCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icCloseMouseExited
        changeColor(iconClose, new Color(0, 0, 0));
    }//GEN-LAST:event_icCloseMouseExited

    private void icMaxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icMaxMouseClicked
        if (!statusPasswordInput) {
            showPasswordInput();
        }
    }//GEN-LAST:event_icMaxMouseClicked
    private void showPasswordInput() {
        JPasswordField passwordField = new JPasswordField(20);

        JPanel passwordPanel = new JPanel();
        passwordPanel.add(new JLabel("Masukkan password:"));
        passwordPanel.add(passwordField);

        // Menampilkan panel dan meminta input password
        int result = JOptionPane.showConfirmDialog(null, passwordPanel, "Konfirmasi Password", JOptionPane.OK_CANCEL_OPTION);
        statusPasswordInput = true; // Set statusPasswordInput menjadi true ketika password input aktif

        if (result == JOptionPane.OK_OPTION) {
            // Gantilah "passwordAnda" dengan password yang benar
            String passwordBenar = "admin";
            char[] inputPassword = passwordField.getPassword();

            if (new String(inputPassword).equals(passwordBenar)) {
                if (getExtendedState() != fbox.Main.MAXIMIZED_BOTH) {
                    setExtendedState(Main.MAXIMIZED_BOTH);
                } else {
                    setExtendedState(Main.NORMAL);
                }
                statusPasswordInput = false;
            } else {
                JOptionPane.showMessageDialog(null, "Password salah!", "Error", JOptionPane.ERROR_MESSAGE);
                statusPasswordInput = false;
            }
        } else if (result == JOptionPane.CANCEL_OPTION) {
            statusPasswordInput = false;
        }
    }

    private void showPasswordClose() {
        // Membuat JTextField untuk memasukkan password
        JPasswordField passwordField = new JPasswordField(20);

        // Membuat panel untuk menampilkan JTextField
        JPanel passwordPanel = new JPanel();
        passwordPanel.add(new JLabel("Masukkan password:"));
        passwordPanel.add(passwordField);

        // Menampilkan panel dan meminta input password
        int result = JOptionPane.showConfirmDialog(null, passwordPanel, "Konfirmasi Password", JOptionPane.OK_CANCEL_OPTION);
        statusPasswordInput = true; // Set statusPasswordInput menjadi true ketika password input aktif

        if (result == JOptionPane.OK_OPTION) {
            // Gantilah "passwordAnda" dengan password yang benar
            String passwordBenar = "admin";
            char[] inputPassword = passwordField.getPassword();

            // Periksa apakah password yang dimasukkan benar
            if (new String(inputPassword).equals(passwordBenar)) {
                // Jika password benar, ubah ukuran jendela

                statusPasswordInput = false;
                System.exit(0);
            } else {
                // Jika password salah, tampilkan pesan kesalahan
                JOptionPane.showMessageDialog(null, "Password salah!", "Error", JOptionPane.ERROR_MESSAGE);
                statusPasswordInput = false;
            }
        } else if (result == JOptionPane.CANCEL_OPTION) {
            statusPasswordInput = false; // Atur statusPasswordInput menjadi false
            // Tutup dialog
        }
    }
    private void icMaxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icMaxMouseEntered
        changeColor(iconMax, new Color(240, 240, 240));
    }//GEN-LAST:event_icMaxMouseEntered

    private void icMaxMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icMaxMouseExited
        changeColor(iconMax, new Color(0, 0, 0));
    }//GEN-LAST:event_icMaxMouseExited

    private void bt_paymentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_paymentMouseClicked
        try {
            dispose();
            userID = this.userID;
            Payment mainpage = new Payment(userID);
            mainpage.show();
        } catch (MidtransError | JSONException | URISyntaxException | MalformedURLException ex) {
            Logger.getLogger(Guide.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Guide.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_paymentMouseClicked

    private void bt_voucerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_voucerMouseClicked
        dispose();
        userID = this.userID;
        Main mainpage = new Main(userID);
        mainpage.show();
    }//GEN-LAST:event_bt_voucerMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Guide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Guide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Guide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Guide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Guide(0).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bt_payment;
    private javax.swing.JLabel bt_voucer;
    private javax.swing.JPanel header;
    private javax.swing.JLabel icClose;
    private javax.swing.JLabel icMax;
    private javax.swing.JPanel iconClose;
    private javax.swing.JPanel iconMax;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
